name: .
on:
  workflow_call:
    inputs:
      status: 
        description: "Release status"
        type: string
        default: "completed"
        # type: choice
        # options:
        #   - completed
        #   - inProgress
        #   - halted
        #   - draft
      release-type:
        description: "Release type"
        required: true
        type: string
        # type: choice
        # options:
        #   - major
        #   - minor
        #   - patch
        #   - premajor
        #   - preminor
        #   - prepatch
        #   - prerelease
      release-notes:
        description: "Release notes"
        type: string
      dist-script:
        description: "Build script to execute"
        type: string
        default: "build"
      deploy-to-play-store:
        description: "Deploy to Play Store"
        type: boolean
        default: true
    secrets:
      GITHUB_ACCESS_TOKEN:
        required: true
      ANDROID_RELEASE_KEYSTORE:
        required: true
      ANDROID_RELEASE_KEYSTORE_PASSWORD:
        required: true
      SERVICE_ACCOUNT_JSON:
        required: true

env:
  RELEASE_TYPE: ${{ inputs.release-type }}
  NODE_AUTH_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_ACCESS_TOKEN }}

jobs:
  Release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up java
        uses: actions/setup-java@v4
        with:
          distribution: 'microsoft'
          java-version: '17.0.3'
          cache: 'gradle'

        # Setup Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          # Important!
          registry-url: 'https://registry.npmjs.org'
          always-auth: true

      - name: Set up environment
        uses: michijs/.github/.github/actions/setup@main

      - name: Install dependencies
        uses: michijs/.github/.github/actions/install@main
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ./src-tauri/target
          key: rust-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            rust-${{ runner.os }}-

      - name: Cache Gradle build and wrappers
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ./src-tauri/gen/android/.gradle
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      # Configure Git
      - name: Git configuration
        uses: michijs/.github/.github/actions/set-git-config-github-actions@main
  
      - name: Bump package version
        run: |
          if [[ "${{ inputs.release-type }}" == pre* ]]; then
            NEW_VERSION=$(bunx npm --no-git-tag-version --preid=beta version ${{ inputs.release-type }})
            echo "RELEASE_TRACK=qa" >> $GITHUB_ENV
          else
            NEW_VERSION=$(bunx npm --no-git-tag-version version ${{ inputs.release-type }})
            echo "RELEASE_TRACK=production" >> $GITHUB_ENV
          fi
          echo "NEW_VERSION=${NEW_VERSION}" >> $GITHUB_ENV

      # Build
      - name: Build
        uses: michijs/.github/.github/actions/run@main
        with: 
          command: ${{ inputs.dist-script }}
          github_token: ${{ inputs.github_token }}

      # Cargo dependency
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libsoup-3.0-dev libwebkit2gtk-4.1-dev pkg-config

      - name: Install Android SDK and NDK
        uses: android-actions/setup-android@v3
        with:
          packages: "ndk;25.2.9519653"

      - name: Set NDK_HOME
        run: echo "NDK_HOME=$ANDROID_SDK_ROOT/ndk/25.2.9519653" >> $GITHUB_ENV

      - name: Android install
        uses: michijs/.github/.github/actions/run@main
        with: 
          command: cargo install --path ./src-tauri
          github_token: ${{ inputs.github_token }}

      - name: Install Rust Android dependency
        run: rustup target add aarch64-linux-android
          
      - name: Build app APK
        uses: michijs/.github/.github/actions/run@main
        with: 
          command: tauri android build --target aarch64
          github_token: ${{ inputs.github_token }}

      - name: Extract Android signing key from env
        run: |
          echo "${{ secrets.ANDROID_RELEASE_KEYSTORE }}" > ./src-tauri/gen/android/release.jks.base64
          base64 -d ./src-tauri/gen/android/release.jks.base64 > ./src-tauri/gen/android/release.decrypted.jks

      - name: Sign app bundle (AAB)
        run: jarsigner -keystore ./src-tauri/gen/android/release.decrypted.jks -storepass "${{ secrets.ANDROID_RELEASE_KEYSTORE_PASSWORD }}" -signedjar ./src-tauri/gen/android/app/build/outputs/bundle/universalRelease/app-release-signed.aab ./src-tauri/gen/android/app/build/outputs/bundle/universalRelease/app-universal-release.aab play_store

      - name: Sign app APK
        run: jarsigner -keystore ./src-tauri/gen/android/release.decrypted.jks -storepass "${{ secrets.ANDROID_RELEASE_KEYSTORE_PASSWORD }}" -signedjar ./src-tauri/gen/android/app/build/outputs/apk/universal/release/app-debug-signed.apk ./src-tauri/gen/android/app/build/outputs/apk/universal/release/app-universal-release-unsigned.apk play_store

      - name: Create whats new directory
        run: |
          mkdir whatsnew
          cd whatsnew && echo "${{ inputs.release-notes }}" >> "whatsnew-en-US"
        
      - name: Get Package Name
        if: fromJSON(inputs.deploy-to-play-store)
        run: echo "ANDROID_PACKAGE_NAME=$(jq -r .identifier src-tauri/tauri.conf.json)" >> $GITHUB_ENV
          
      - name: Deploy to Play Store
        if: fromJSON(inputs.deploy-to-play-store)
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
          packageName: ${{ env.ANDROID_PACKAGE_NAME }}
          whatsNewDirectory: "whatsnew"
          status: ${{ inputs.STATUS }}
          releaseFiles: ./src-tauri/gen/android/app/build/outputs/bundle/universalRelease/app-release-signed.aab
          track: ${{ env.RELEASE_TRACK }}
          
      # End Android

      # Commit changes
      - name: Commit package.json changes and create tag
        run: |
          git add package.json
          git commit -m "chore: release ${{ env.NEW_VERSION }}"
          git tag ${{ env.NEW_VERSION }}

      # Push repository changes
      - name: Push changes
        uses: michijs/.github/.github/actions/pull-and-push@main
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tags: true

      # Update GitHub release with changelog
      - name: Update GitHub release documentation
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.NEW_VERSION }}
          body: ${{ inputs.release-notes }}
          prerelease: ${{ startsWith(inputs.release-type, 'pre') }}
          files: |
            ./src-tauri/gen/android/app/build/outputs/apk/universal/release/app-debug-signed.apk
            ./src-tauri/gen/android/app/build/outputs/apk/universal/release/app-universal-release-unsigned.apk
            ./src-tauri/gen/android/app/build/outputs/bundle/universalRelease/app-universal-release.aab
            ./src-tauri/gen/android/app/build/outputs/bundle/universalRelease/app-release-signed.aab
