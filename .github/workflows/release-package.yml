name: Release package
on:
  workflow_call:
    inputs:
      release-type:
        description: "Release type"
        required: true
        type: string
        # type: choice
        # options:
        #   - major
        #   - minor
        #   - patch
        #   - premajor
        #   - preminor
        #   - prepatch
        #   - prerelease
      release-notes:
        description: "Release notes"
        type: string
      dist-script:
        description: "Distribution script to execute"
        type: string
        default: "dist"
      visibility:
        description: "Package visibility"
        type: string
        default: "public"
permissions:
  id-token: write
  contents: write
  packages: write

env:
  RELEASE_TYPE: ${{ github.event.inputs.release-type }}

jobs:
  Release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # We must fetch at least the immediate parents so that if this is
          # a pull request then we can checkout the head.
          fetch-depth: 2

      - name: Determine registry URL
        run: |
          if [ -f .npmrc ]; then
            REGISTRY_URL=$(grep -E '^@.*:registry=' .npmrc | cut -d'=' -f2-)
          else
            REGISTRY_URL="https://registry.npmjs.org"
          fi
          echo "REGISTRY_URL=$REGISTRY_URL" >> $GITHUB_ENV

        # Setup Node.js environment
      - name: Set up Node.js 20.9.0
        uses: actions/setup-node@v4
        with:
          node-version: 20.9.0
          # Important!
          registry-url: ${{ inputs.registry-url }}
          always-auth: true

      - name: Set up environment
        uses: michijs/.github/.github/actions/setup@main

      - name: Install dependencies
        uses: michijs/.github/.github/actions/install@main

      # Configure Git
      - name: Git configuration
        uses: michijs/.github/.github/actions/set-git-config-github-actions@main

      # Bump package version
      # Use tag latest
      - name: Bump release version
        if: startsWith(github.event.inputs.release-type, 'pre') != true
        run: |
          echo "NEW_VERSION=$(npm --no-git-tag-version version $RELEASE_TYPE)" >> $GITHUB_ENV
          echo "RELEASE_TAG=latest" >> $GITHUB_ENV

      # Bump package pre-release version
      # Use tag beta for pre-release versions
      - name: Bump pre-release version
        if: startsWith(github.event.inputs.release-type, 'pre')
        run: |
          echo "NEW_VERSION=$(npm --no-git-tag-version --preid=beta version $RELEASE_TYPE)" >> $GITHUB_ENV
          echo "RELEASE_TAG=beta" >> $GITHUB_ENV

      - name: Build
        uses: michijs/.github/.github/actions/run@main
        with: 
          command: ${{ inputs.dist-script }}

      # Commit changes
      - name: Commit package.json changes and create tag
        run: |
          git add "package.json"
          git commit -m "chore: release ${{ env.NEW_VERSION }}"
          git tag ${{ env.NEW_VERSION }}

      # Push repository changes
      - name: Push changes
        uses: michijs/.github/.github/actions/pull-and-push@main
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tags: true

      # Update GitHub release with changelog
      - name: Update GitHub release documentation
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.NEW_VERSION }}
          body: ${{ github.event.inputs.release-notes }}
          prerelease: ${{ startsWith(github.event.inputs.release-type, 'pre') }}


      - name: Set NODE_AUTH_TOKEN
        run: |
          if [ "$REGISTRY_URL" = "https://registry.npmjs.org" ]; then
            echo "NODE_AUTH_TOKEN=${{ secrets.NPM_ACCESS_TOKEN }}" >> $GITHUB_ENV
          else
            echo "NODE_AUTH_TOKEN=${{ secrets.GITHUB_TOKEN }}" >> $GITHUB_ENV
          fi

      # Publish version to public / private repository
      - name: Publish
        run: npm publish --provenance --access ${{ inputs.visibility }} --tag ${{ env.RELEASE_TAG }}
        env:
          NODE_AUTH_TOKEN: ${{ env.NODE_AUTH_TOKEN }}
