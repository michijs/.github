name: Release package
on:
  workflow_call:
    inputs:
      release-type:
        description: "Release type"
        required: true
        type: string
        # type: choice
        # options:
        #   - major
        #   - minor
        #   - patch
        #   - premajor
        #   - preminor
        #   - prepatch
        #   - prerelease
      release-notes:
        description: "Release notes"
        type: string
      dist-script:
        description: "Distribution script to execute"
        type: string
        default: "dist"
      visibility:
        description: "Package visibility"
        type: string
        default: "public"

permissions:
  id-token: write
  contents: write
  packages: write

env:
  RELEASE_TYPE: ${{ github.event.inputs.release-type }}

jobs:
  Release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up environment
        uses: michijs/.github/.github/actions/setup@main

      - name: Install dependencies
        uses: michijs/.github/.github/actions/install@main
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git
        uses: michijs/.github/.github/actions/set-git-config-github-actions@main

      - name: Bump package version
        run: |
          if [[ "${{ github.event.inputs.release-type }}" == pre* ]]; then
            echo "NEW_VERSION=$(bunx npm --no-git-tag-version --preid=beta version $RELEASE_TYPE)" >> $GITHUB_ENV
            echo "RELEASE_TAG=beta" >> $GITHUB_ENV
          else
            echo "NEW_VERSION=$(bunx npm --no-git-tag-version version $RELEASE_TYPE)" >> $GITHUB_ENV
            echo "RELEASE_TAG=latest" >> $GITHUB_ENV
          fi

      - name: Build
        uses: michijs/.github/.github/actions/run@main
        with:
          command: ${{ inputs.dist-script }}

      - name: Commit package.json changes and create tag
        run: |
          git add package.json
          git commit -m "chore: release ${{ env.NEW_VERSION }}"
          git tag ${{ env.NEW_VERSION }}

      - name: Push changes
        uses: michijs/.github/.github/actions/pull-and-push@main
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tags: true

      - name: Update GitHub release documentation
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.NEW_VERSION }}
          body: ${{ github.event.inputs.release-notes }}
          prerelease: ${{ startsWith(github.event.inputs.release-type, 'pre') }}

        # If public publish to npm
        # Setup Node.js environment
      - name: Set up registry.npmjs.org registry
        if: inputs.visibility == 'public'
        run: |
          echo "//registry.npmjs.org/:_authToken=${NPM_ACCESS_TOKEN}" > ~/.npmrc

      - name: Publish to registry.npmjs.org
        if: inputs.visibility == 'public'
        run: |
          bunx npm publish --provenance --access ${{ inputs.visibility }} --tag ${{ env.RELEASE_TAG }}
        env:
          NPM_ACCESS_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}

        # If private or public publish to github packages
      - name: Set up npm.pkg.github.com registry
        run: |
          echo "@michijs:registry=https://npm.pkg.github.com
          //npm.pkg.github.com/:_authToken=${GITHUB_TOKEN}" > ~/.npmrc

      - name: Publish to npm.pkg.github.com
        run: |
          bunx npm publish --access ${{ inputs.visibility }} --tag ${{ env.RELEASE_TAG }} $([[ "${{ inputs.visibility }}" = "public" ]] && echo "--provenance")
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}