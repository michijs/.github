name: "Run tests"
description: "Run tests"
inputs:
  github_token:
    description: "Github token"
    required: false
  scripts:
    description: 'JSON array of scripts with name and script fields'
    required: false
  ref:
    description: 'Git ref to checkout'
    required: false

runs:
  using: "composite"
  steps:
    - name: Checkout repository
      uses: actions/checkout@v5
      with:
        ref: ${{ inputs.ref }}
        token: ${{ inputs.github_token }}
        persist-credentials: false

    - name: Setup credentials
      uses: michijs/.github/.github/actions/setup-credentials@main
      with:
        github_token: ${{ inputs.github_token }}
        
    - name: Set up environment
      uses: michijs/.github/.github/actions/setup@main

    - name: Install dependencies
      uses: michijs/.github/.github/actions/install@main

    - name: Check if PR exists for branch
      if: inputs.ref != ''
      id: pr-check
      uses: actions/github-script@v7
      with:
        github-token: ${{ env.GITHUB_TOKEN }}
        result-encoding: string
        script: |
          const branch = "${{ inputs.ref }}";
          const owner = context.repo.owner;
          const repo = context.repo.repo;
          const head = `${owner}:${branch}`;

          const pulls = await github.rest.pulls.list({
            owner,
            repo,
            head,
            state: 'open',
            per_page: 1
          });

          core.setOutput(
            'pr',
            pulls.data.length > 0 ? JSON.stringify(pulls.data[0]) : ""
          );

    - name: Get tests to run
      shell: bash
      run: echo "SCRIPTS=$(jq -r -c '.' .github/workflows/tests.json)" >> $GITHUB_ENV

    - name: Run scripts
      uses: michijs/.github/.github/actions/run@main
      id: execute
      continue-on-error: ${{ steps.pr-check.outputs.pr != '' }}
      with:
        command: ${{ env.SCRIPTS != '' && env.SCRIPTS || inputs.scripts }}

    - name: Comment on PR
      if: steps.pr-check.outputs.pr != ''
      uses: actions/github-script@v7
      with:
        github-token: ${{ env.GITHUB_TOKEN }}
        script: |
          const failed = "${{ steps.execute.outcome }}" === 'failure';
          const pr = ${{ steps.pr-check.outputs.pr }};
          await github.rest.pulls.update({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: pr.number,
            body: `${pr.body}\n\n${
              failed
                ? "🔴❌ FAILURE > Some tests failed. Please [Review the logs](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}?check_suite_focus=true)."
                : "🟢✅ SUCCESS > All tests passed successfully."
            }`,
          });
