name: "Execute typescript file"
description: "Execute typescript file in the selected repository"
inputs:
  params:
    description: "Params"
    required: false
    default: "{}"
  script:
    description: "Script to execute"
    required: true

runs:
  using: "composite"
  steps:
    - name: Execute TS file
      uses: michijs/.github/.github/actions/tsscript@main
      with:
        script: |
          import { promises as fs } from 'fs';
          import $ from 'bun';
          async function importScriptFromUrl(url) {
            const fileName = url.split('/').at(-1);
            const scriptText = await (await fetch(url)).text();
            await fs.writeFile(`/tmp/${fileName}`, scriptText);
            const { default: script } = await import(`file:///tmp/${fileName}`);
            return (params) => script({params, github, runGroup});
          }
          const github = ${{ toJson(github) }};
          const script = await importScriptFromUrl('${{ inputs.script }}');
          async function runGroup(name, callback){
            try {
              const result = await callback();
              console.log(`::group::✅ ${name}`);
              console.log(result);
              console.log(`::endgroup::`);
            } catch (err) {
              console.log(`::group::⛔ ${name}`);
              console.log(`::error::${err}`);
              console.log(`::endgroup::`);
              throw err;
            }
          }
          await script(${{ inputs.params }});
