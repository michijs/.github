name: Dispatch
description: "Like uses: but with dynamic entry"
inputs:
  target:
    description: "Workflow name to call"
    required: true
  ref:
    description: "Ref to use"
    required: true
  github_token:
    description: "Github token"
    required: true

runs:
  using: "composite"
  steps:
    - name: Trigger target workflow
      shell: bash
      id: trigger
      run: |
        response=$(curl -s -X POST \
          -H "Authorization: Bearer ${{ inputs.github_token }}" \
          -H "Accept: application/vnd.github+json" \
          https://api.github.com/repos/${{ github.repository }}/actions/workflows/${{ inputs.target }}.yml/dispatches \
          -d '{"ref":"${{ inputs.ref }}"}')

        # Fetch latest run id
        sleep 5
        run_id=$(curl -s \
          -H "Authorization: Bearer ${{ inputs.github_token }}" \
          -H "Accept: application/vnd.github+json" \
          "https://api.github.com/repos/${{ github.repository }}/actions/workflows/${{ inputs.target }}.yml/runs?branch=${{ inputs.ref }}&event=workflow_dispatch" \
          | jq '.workflow_runs[0].id')

        echo "run_id=$run_id" >> $GITHUB_OUTPUT

    - name: Wait for completion
      shell: bash
      run: |
        while true; do
          status=$(curl -s \
            -H "Authorization: Bearer ${{ inputs.github_token }}" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ steps.trigger.outputs.run_id }}" \
            | jq -r '.status')

          conclusion=$(curl -s \
            -H "Authorization: Bearer ${{ inputs.github_token }}" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ steps.trigger.outputs.run_id }}" \
            | jq -r '.conclusion')

          if [ "$status" == "completed" ]; then
            echo "Workflow completed with conclusion: $conclusion"
            if [ "$conclusion" != "success" ]; then
              exit 1
            fi
            break
          fi
          echo "Still running..."
          sleep 10
        done
